{
  "Resources": {
    "VPCB9E5F0B4": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdkeks/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/Resource"
      }
    },
    "VPCPublicSubnet1SubnetB4246D30": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "cdkeks/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PublicSubnet1/Subnet"
      }
    },
    "VPCPublicSubnet1RouteTableFEE4B781": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "cdkeks/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PublicSubnet1/RouteTable"
      }
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PublicSubnet1/RouteTableAssociation"
      }
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PublicSubnet1/DefaultRoute"
      }
    },
    "VPCPublicSubnet1EIP6AD938E8": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "cdkeks/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PublicSubnet1/EIP"
      }
    },
    "VPCPublicSubnet1NATGatewayE0556630": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "cdkeks/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PublicSubnet1/NATGateway"
      }
    },
    "VPCPublicSubnet2Subnet74179F39": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "cdkeks/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PublicSubnet2/Subnet"
      }
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "cdkeks/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PublicSubnet2/RouteTable"
      }
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet2Subnet74179F39"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PublicSubnet2/RouteTableAssociation"
      }
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PublicSubnet2/DefaultRoute"
      }
    },
    "VPCPublicSubnet2EIP4947BC00": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "cdkeks/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PublicSubnet2/EIP"
      }
    },
    "VPCPublicSubnet2NATGateway3C070193": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "VPCPublicSubnet2Subnet74179F39"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "cdkeks/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PublicSubnet2/NATGateway"
      }
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "cdkeks/VPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PrivateSubnet1/Subnet"
      }
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "cdkeks/VPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PrivateSubnet1/RouteTable"
      }
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PrivateSubnet1/DefaultRoute"
      }
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "cdkeks/VPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PrivateSubnet2/Subnet"
      }
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "cdkeks/VPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PrivateSubnet2/RouteTable"
      }
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet2NATGateway3C070193"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/PrivateSubnet2/DefaultRoute"
      }
    },
    "VPCIGWB7E252D3": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdkeks/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/IGW"
      }
    },
    "VPCVPCGW99B986DC": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "InternetGatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/VPC/VPCGW"
      }
    },
    "BastionRole201D3308": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                },
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/BastionRole/Resource"
      }
    },
    "InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "BastionRole201D3308"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/InstanceProfile"
      }
    },
    "EKSSecurityGroup931BB941": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "cdkeks/EKSSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.0.0/16",
            "Description": "from 10.0.0.0/16:ALL TRAFFIC",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/EKSSecurityGroup/Resource"
      }
    },
    "clusterRole88D0C969": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "eks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSClusterPolicy"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/cluster/Role/Resource"
      }
    },
    "clusterCreationRole2B3B5002": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "DependsOn": [
        "VPCIGWB7E252D3",
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableBE8A6027",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet1Subnet8BCA10E0",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTable0A19E10E",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
        "VPCPrivateSubnet2SubnetCFCDAA7A",
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1EIP6AD938E8",
        "VPCPublicSubnet1NATGatewayE0556630",
        "VPCPublicSubnet1RouteTableFEE4B781",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
        "VPCPublicSubnet1SubnetB4246D30",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2EIP4947BC00",
        "VPCPublicSubnet2NATGateway3C070193",
        "VPCPublicSubnet2RouteTable6F1A15F1",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
        "VPCPublicSubnet2Subnet74179F39",
        "VPCB9E5F0B4",
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "cdkeks/cluster/Resource/CreationRole/Resource"
      }
    },
    "clusterCreationRoleDefaultPolicy69503D2C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "clusterRole88D0C969",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "eks:CreateCluster",
                "eks:DescribeCluster",
                "eks:DescribeUpdate",
                "eks:DeleteCluster",
                "eks:UpdateClusterVersion",
                "eks:UpdateClusterConfig",
                "eks:CreateFargateProfile",
                "eks:TagResource",
                "eks:UntagResource"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "eks:DescribeFargateProfile",
                "eks:DeleteFargateProfile"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "iam:GetRole",
                "iam:listAttachedRolePolicies"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeRouteTables",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeVpcs"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "clusterCreationRoleDefaultPolicy69503D2C",
        "Roles": [
          {
            "Ref": "clusterCreationRole2B3B5002"
          }
        ]
      },
      "DependsOn": [
        "VPCIGWB7E252D3",
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableBE8A6027",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet1Subnet8BCA10E0",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTable0A19E10E",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
        "VPCPrivateSubnet2SubnetCFCDAA7A",
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1EIP6AD938E8",
        "VPCPublicSubnet1NATGatewayE0556630",
        "VPCPublicSubnet1RouteTableFEE4B781",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
        "VPCPublicSubnet1SubnetB4246D30",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2EIP4947BC00",
        "VPCPublicSubnet2NATGateway3C070193",
        "VPCPublicSubnet2RouteTable6F1A15F1",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
        "VPCPublicSubnet2Subnet74179F39",
        "VPCB9E5F0B4",
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "cdkeks/cluster/Resource/CreationRole/DefaultPolicy/Resource"
      }
    },
    "clusterC5B25D0D": {
      "Type": "Custom::AWSCDK-EKS-Cluster",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.cdkeksawscdkawseksClusterResourceProviderframeworkonEventDCB75D67Arn"
          ]
        },
        "Config": {
          "version": "1.18",
          "roleArn": {
            "Fn::GetAtt": [
              "clusterRole88D0C969",
              "Arn"
            ]
          },
          "resourcesVpcConfig": {
            "subnetIds": [
              {
                "Ref": "VPCPublicSubnet1SubnetB4246D30"
              },
              {
                "Ref": "VPCPublicSubnet2Subnet74179F39"
              },
              {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
              },
              {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
              }
            ],
            "securityGroupIds": [
              {
                "Fn::GetAtt": [
                  "EKSSecurityGroup931BB941",
                  "GroupId"
                ]
              }
            ],
            "endpointPublicAccess": true,
            "endpointPrivateAccess": true
          }
        },
        "AssumeRoleArn": {
          "Fn::GetAtt": [
            "clusterCreationRole2B3B5002",
            "Arn"
          ]
        },
        "AttributesRevision": 2
      },
      "DependsOn": [
        "clusterCreationRoleDefaultPolicy69503D2C",
        "clusterCreationRole2B3B5002",
        "VPCIGWB7E252D3",
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableBE8A6027",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet1Subnet8BCA10E0",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTable0A19E10E",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
        "VPCPrivateSubnet2SubnetCFCDAA7A",
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1EIP6AD938E8",
        "VPCPublicSubnet1NATGatewayE0556630",
        "VPCPublicSubnet1RouteTableFEE4B781",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
        "VPCPublicSubnet1SubnetB4246D30",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2EIP4947BC00",
        "VPCPublicSubnet2NATGateway3C070193",
        "VPCPublicSubnet2RouteTable6F1A15F1",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
        "VPCPublicSubnet2Subnet74179F39",
        "VPCB9E5F0B4",
        "VPCVPCGW99B986DC"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "cdkeks/cluster/Resource/Resource/Default"
      }
    },
    "clusterKubectlReadyBarrier17584D5B": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": "aws:cdk:eks:kubectl-ready"
      },
      "DependsOn": [
        "clusterCreationRoleDefaultPolicy69503D2C",
        "clusterCreationRole2B3B5002",
        "clusterC5B25D0D"
      ],
      "Metadata": {
        "aws:cdk:path": "cdkeks/cluster/KubectlReadyBarrier"
      }
    },
    "clusterAwsAuthmanifestB57F2A94": {
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.cdkeksawscdkawseksKubectlProviderframeworkonEventEE8F234FArn"
          ]
        },
        "Manifest": {
          "Fn::Join": [
            "",
            [
              "[{\"apiVersion\":\"v1\",\"kind\":\"ConfigMap\",\"metadata\":{\"name\":\"aws-auth\",\"namespace\":\"kube-system\",\"labels\":{\"aws.cdk.eks/prune-c8d13e3fd011bcb1e7fd3c9b51375d551186a022fb\":\"\"}},\"data\":{\"mapRoles\":\"[{\\\"rolearn\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "BastionRole201D3308",
                  "Arn"
                ]
              },
              "\\\",\\\"username\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "BastionRole201D3308",
                  "Arn"
                ]
              },
              "\\\",\\\"groups\\\":[\\\"system:masters\\\"]},{\\\"rolearn\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "clusterNodegroupDefaultCapacityNodeGroupRole25AD92AB",
                  "Arn"
                ]
              },
              "\\\",\\\"username\\\":\\\"system:node:{{EC2PrivateDNSName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\"]}]\",\"mapUsers\":\"[]\",\"mapAccounts\":\"[]\"}}]"
            ]
          ]
        },
        "ClusterName": {
          "Ref": "clusterC5B25D0D"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "clusterCreationRole2B3B5002",
            "Arn"
          ]
        },
        "PruneLabel": "aws.cdk.eks/prune-c8d13e3fd011bcb1e7fd3c9b51375d551186a022fb",
        "Overwrite": true
      },
      "DependsOn": [
        "clusterKubectlReadyBarrier17584D5B"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "cdkeks/cluster/AwsAuth/manifest/Resource/Default"
      }
    },
    "clusterNodegroupDefaultCapacityNodeGroupRole25AD92AB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/cluster/NodegroupDefaultCapacity/NodeGroupRole/Resource"
      }
    },
    "clusterNodegroupDefaultCapacity371BFCEA": {
      "Type": "AWS::EKS::Nodegroup",
      "Properties": {
        "ClusterName": {
          "Ref": "clusterC5B25D0D"
        },
        "NodeRole": {
          "Fn::GetAtt": [
            "clusterNodegroupDefaultCapacityNodeGroupRole25AD92AB",
            "Arn"
          ]
        },
        "Subnets": [
          {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
          },
          {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
          }
        ],
        "AmiType": "AL2_x86_64",
        "ForceUpdateEnabled": true,
        "InstanceTypes": [
          "m5.large"
        ],
        "ScalingConfig": {
          "DesiredSize": 2,
          "MaxSize": 2,
          "MinSize": 2
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/cluster/NodegroupDefaultCapacity/Resource"
      }
    },
    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.",
              {
                "Ref": "AWS::Region"
              },
              ".",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              {
                "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
              },
              "/55c25843fb771d7aefd2d0650dc98c1f3c23be3a05d4ae58ed5657b9aabc3197.json"
            ]
          ]
        },
        "Parameters": {
          "referencetocdkeksclusterCreationRoleC3460E30Arn": {
            "Fn::GetAtt": [
              "clusterCreationRole2B3B5002",
              "Arn"
            ]
          }
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "cdkeks/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource"
      }
    },
    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.",
              {
                "Ref": "AWS::Region"
              },
              ".",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              {
                "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
              },
              "/9946a804b82b91d2ed400f0a0d0db3c1598641c2c474eb26927c5a216ab7a372.json"
            ]
          ]
        },
        "Parameters": {
          "referencetocdkekscluster493FF92EArn": {
            "Fn::GetAtt": [
              "clusterC5B25D0D",
              "Arn"
            ]
          },
          "referencetocdkeksclusterCreationRoleC3460E30Arn": {
            "Fn::GetAtt": [
              "clusterCreationRole2B3B5002",
              "Arn"
            ]
          },
          "referencetocdkeksVPCPrivateSubnet1SubnetC9836E8DRef": {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
          },
          "referencetocdkeksVPCPrivateSubnet2Subnet0656E4EBRef": {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
          },
          "referencetocdkekscluster493FF92EClusterSecurityGroupId": {
            "Fn::GetAtt": [
              "clusterC5B25D0D",
              "ClusterSecurityGroupId"
            ]
          }
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "cdkeks/@aws-cdk--aws-eks.KubectlProvider.NestedStack/@aws-cdk--aws-eks.KubectlProvider.NestedStackResource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAAA02QTW/CMAyGfwt3E8Z22HZbVSGEprGoTNzTYEZGG1eJPYSq/veldFBOfvz6603mav7wouaTN3OKU7s7zlpLAVW7YWOPUGAkCRYhJx85iGXIJTLVY2Hv7/lTuBHuaViQII3uHDvyHfQ3WrSPqt02tq9tdQ5aysrZjZQeh8EbFSSMX6ascNRHLYuRrDP95ltzD4uV7sPa8NIwnswZdHC/CcfFK88YEl8bBif/WcbJ+aFGz7BBK8HxeRlImouHe6EDZ2rVFjT4u8ZV+injLepAe5ckTel5lxsDdYDHqNq8Sh+JAbJTzIQP8C7lxRPGD+PdHiPDmnb4fT19S7quA33mA/nZk3pWr5Of6Nw0iGdXoyqG+AeSfYtH1wEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "cdkeks/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "clusterConfigCommand30DB378E": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws eks update-kubeconfig --name ",
            {
              "Ref": "clusterC5B25D0D"
            },
            " --region ",
            {
              "Ref": "AWS::Region"
            },
            " --role-arn ",
            {
              "Fn::GetAtt": [
                "BastionRole201D3308",
                "Arn"
              ]
            }
          ]
        ]
      }
    },
    "clusterGetTokenCommand09C244B5": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws eks get-token --cluster-name ",
            {
              "Ref": "clusterC5B25D0D"
            },
            " --region ",
            {
              "Ref": "AWS::Region"
            },
            " --role-arn ",
            {
              "Fn::GetAtt": [
                "BastionRole201D3308",
                "Arn"
              ]
            }
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store."
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 4 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}